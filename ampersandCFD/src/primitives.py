# This file contains the basic primitives used in the generation of OpenFOAM casefiles
def createFoamHeader(className="dictionary",objectName="blockMeshDict"):
    header = f"""/*----------------------------*- AmpersandCFD -*------------------------------*\ 
This file is part of OpenFOAM casefiles automatically generated by AmpersandCFD
FoamFile
{{
    version     2.0;
    format      ascii;
    class       {className};
    object      {objectName};
}}
"""
    return header

def createDimensions(M=1,L=1,T=1):
    return f"dimensions      [{M} {L} {T} 0 0 0 0];"

def createScalarFixedValue(patch_name="inlet",value=0):
    return f"""\n{patch_name}
    {{
        type            fixedValue;
        value           uniform {value};
    }};"""

def createScalarZeroGradient(patch_name="inlet"):
    return f"""\n{patch_name}
    {{
        type            zeroGradient;
    }};"""

def createVectorFixedValue(patch_name="inlet",value=[0,0,0]):
    return f"""\n{patch_name}
    {{
        type            fixedValue;
        value           uniform ("{value[0]} {value[1]} {value[2]})";
    }};""" 

def createVectorZeroGradient(patch_name="inlet"):
    return f"""\n{patch_name}
    {{
        type            zeroGradient;
    }};"""

if __name__ == "__main__":
    print(createFoamHeader(className="dictionary",objectName="snappyHexMeshDict"))
    print(createDimensions(M=1,L=1,T=1))
    print(createScalarFixedValue(patch_name="inlet",value=0))
    print(createScalarZeroGradient(patch_name="inlet"))
    print(createVectorFixedValue(patch_name="inlet",value=[0,0,0]))
